@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@using Microsoft.Extensions.Caching.Distributed
@using PizzaMaker.Presentation.Extensions
@using PizzaMaker.Presentation.Models
@inherits LayoutComponentBase
@inject ProtectedSessionStorage ProtectedSessionStore
@inject IDistributedCache Cache
@inject NavigationManager NavManager

<FluentMainLayout>
    <Header>
        <h3>Pizza maker</h3>
        <FluentCounterBadge Count="@_cartItemCount"
                            ShowWhen="@(count => count > 0)"
                            Appearance="Appearance.Neutral"
                            HorizontalPosition="50"
                            BottomPosition="50">
            <FluentButton Appearance="Appearance.Accent" OnClick="@(() => NavManager.NavigateTo("/cart"))">
                <FluentIcon Value="@(new Icons.Regular.Size24.Cart())" Color="@Color.Fill" />
            </FluentButton>
        </FluentCounterBadge>
    </Header>
    <Body>
        @Body
    </Body>
</FluentMainLayout>

<FluentToastProvider />
<FluentDialogProvider />
<FluentTooltipProvider />
<FluentMessageBarProvider />
<FluentMenuProvider />

@code{
    private int _cartItemCount;
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            string? sessionId = null;
            var sessionIdResult = await ProtectedSessionStore.GetAsync<string>("sessionId");
            if (sessionIdResult.Success)
            {
                sessionId = sessionIdResult.Value;
            }
            if (sessionId is not null)
            {
                var userSession = await Cache.GetAsync<Session>(sessionId);
                if (userSession is not null)
                {
                    _cartItemCount = userSession.Items.Select(ci => ci.Quantity).Sum();
                    StateHasChanged();
                }
            }
        }
    }
}
